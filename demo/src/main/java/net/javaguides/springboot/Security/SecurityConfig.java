package net.javaguides.springboot.Security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

import static org.springframework.security.config.Customizer.withDefaults;

@Configuration
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http.cors().and().csrf(csrf -> csrf.disable()) // ğŸ”´ Desabilita proteÃ§Ã£o CSRF (se
                        // necessÃ¡rio)
                .authorizeHttpRequests(auth -> auth
                        .requestMatchers("/api/**").authenticated() // ğŸ”’ Protege a API
                        .anyRequest().permitAll() // ğŸ”“ Permite outras requisiÃ§Ãµes sem autenticaÃ§Ã£o
                )
                .formLogin(withDefaults()) // ğŸ”‘ Habilita o login padrÃ£o do Spring Security
                .httpBasic(withDefaults()); // ğŸ”‘ Habilita autenticaÃ§Ã£o HTTP Basic

        return http.build();
    }
}
